{"version":3,"sources":["components/elements/sectionTitle/SectionTitle.jsx","components/blocks/appearance/Appearance.jsx","components/elements/measureButton/MeasureButton.jsx","components/elements/subTitle/SubTitle.jsx","components/elements/defaultButton/DefaultButton.jsx","potree/insertion.js","components/blocks/tools/Tools.jsx","components/blocks/scene/UIScene.jsx","components/blocks/collapse/DefaultCollapse.jsx","components/elements/hideCollapse/HideCollapse.jsx","potree/init.js","components/blocks/potree/PotreeRender.jsx","layout/Base.jsx","App.js","serviceWorker.js","index.js","assets/icons/icon-appearance.svg","assets/icons/icon-scene.svg","assets/icons/icon-tool.svg","assets/icons/icon-point-default.svg","assets/icons/icon-line-default.svg","assets/icons/icon-polygon-default.svg","assets/icons/icon-point-white.svg","assets/icons/icon-line-white.svg","assets/icons/icon-polygon-white.svg"],"names":["SectionTitle","props","className","title","Appearance","viewer","useState","pointBudget","setpointBudget","fieldOfView","setfieldOfView","useEffect","window","potreeViewer","setPointBudget","setFOV","onChangePoint","value","onChangeField","usePointBudgetAndFoV","tipFormatter","max","min","onChange","MeasureButton","hover","setHover","useHover","mouseEnter","mouseLeave","onMouseEnter","onMouseLeave","onClick","src","srcHover","alt","label","SubTitle","DefaultButton","style","active","content","Structure","POINT_MEASURE","showDistances","showAngles","showCoordinates","showArea","closed","maxMarkers","name","LINE_MEASURE","POLYGON_MEASURE","insertion","key","measuringTool","startInsertion","Tools","setactive","showLabels","measureItmes","disposeScene","IconPoint","IconPointWhite","IconLine","IconLineWhite","IconPolygon","IconPolygonWhite","map","item","index","marginRight","UIScene","checkedKeys","setCheckedKeys","treeData","setTreeData","scene","measurements","annotations","pointclouds","initChecked","temp","pointCloud","uuid","measure","children","annotation","hasModel","push","update","showLine","checkable","onCheck","visible","filter","find","Panel","Collapse","DefaultCollapse","activeKey","setactiveKey","tempArr","settempArr","useUpdateScene","panelItems","appearanceIcon","toolIcon","sceneIcon","defaultActiveKey","expandIconPosition","header","fontWeight","itemKey","cssStyle","arrowStyle","fontSize","color","HideCollapse","setvisible","DoubleLeftOutlined","DoubleRightOutlined","Cesium","THREE","proj4","Potree","$","potreeContainer","position","width","height","left","top","potreeRenderArea","backgroundImage","cesiumContainer","backgroundColor","PotreeRender","ref","useRef","current","reactSetViewer","cesiumViewer","Viewer","useDefaultRenderLoop","animation","baseLayerPicker","fullscreenButton","geocoder","homeButton","infoBox","sceneModePicker","selectionIndicator","timeline","navigationHelpButton","imageryProvider","createOpenStreetMapImageryProvider","url","terrainShadows","ShadowMode","DISABLED","cp","Cartesian3","camera","setView","destination","orientation","heading","pitch","Math","PI_OVER_TWO","roll","document","getElementById","setEDLEnabled","setMinNodeSize","loadSettingsFromURL","setBackground","useHQ","loadGUI","setLanguage","next","show","toggleSidebar","loadPointCloud","e","addPointCloud","pointcloud","set","rotation","material","pointSizeType","PointSizeType","ADAPTIVE","size","elevationRange","weightRGB","weightElevation","view","lookAt","measureTimings","pointcloudProjection","mapProjection","defs","toMap","toScene","requestAnimationFrame","loop","timestamp","clock","getDelta","render","undefined","getActiveCamera","pPos","Vector3","applyMatrix4","matrixWorld","pUp","pTarget","getPivot","toCes","pos","xy","x","y","z","deg","forward","fromDegrees","cPos","cUpTarget","cTarget","cDir","subtract","cUp","normalize","direction","up","aspect","fovy","PI","fov","frustum","fovx","atan","tan","potreeInit","setviewer","id","Sider","Layout","Content","BaseLayout","App","Base","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5e5e3f4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.less';\r\n\r\nconst SectionTitle = (props) => {\r\n\r\n    return (\r\n        <h3 className=\"section-title\">\r\n            {props.title}\r\n        </h3>\r\n    );\r\n}\r\n\r\nexport default SectionTitle;\r\n","import { Slider } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport SectionTitle from '../../elements/sectionTitle/SectionTitle';\r\nimport './index.less';\r\n\r\nconst usePointBudgetAndFoV = (viewer) => {\r\n    const [pointBudget, setpointBudget] = useState(1000000);\r\n    const [fieldOfView, setfieldOfView] = useState(20);\r\n\r\n    const onChangePoint = (value) => setpointBudget(value);\r\n    const onChangeField = (value) => setfieldOfView(value);\r\n\r\n    useEffect(() => {\r\n        if (viewer) {\r\n            window.potreeViewer.setPointBudget(pointBudget)\r\n            window.potreeViewer.setFOV(fieldOfView)\r\n        }\r\n    }, [viewer])\r\n\r\n    useEffect(() => {\r\n        if (viewer) {\r\n            window.potreeViewer.setPointBudget(pointBudget)\r\n        }\r\n    }, [pointBudget])\r\n\r\n    useEffect(() => {\r\n        if (viewer) {\r\n            window.potreeViewer.setFOV(fieldOfView)\r\n        }\r\n    }, [fieldOfView])\r\n\r\n    return { \r\n        pointBudget, fieldOfView,\r\n        onChangePoint, onChangeField\r\n    }\r\n\r\n} \r\n\r\nconst Appearance = (props) => {\r\n   const  {  pointBudget, fieldOfView, onChangePoint, onChangeField } = usePointBudgetAndFoV(props.viewer)\r\n    return (\r\n        <div className=\"appearance__wrapper\">\r\n            <SectionTitle title=\"Point budget\" />\r\n            <Slider tipFormatter={null} max={10000000} min={10000} value={pointBudget} onChange={onChangePoint} />\r\n            <p>{pointBudget}</p>\r\n\r\n            <SectionTitle title=\"Field of view\" />\r\n            <Slider tipFormatter={null} max={100} min={20} value={fieldOfView} onChange={onChangeField} />\r\n            <p>{fieldOfView}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appearance;\r\n","import React, { useState } from 'react';\r\nimport './index.less';\r\n\r\nconst useHover = () => {\r\n    const [hover, setHover] = useState(false);\r\n    \r\n    const mouseEnter = () => setHover(true);\r\n    const mouseLeave = () => setHover(false);\r\n\r\n    return [hover, mouseEnter, mouseLeave];\r\n}\r\n\r\nconst MeasureButton = (props) => {\r\n    const [hover, mouseEnter, mouseLeave] = useHover();\r\n\r\n    return (\r\n        <label\r\n            onMouseEnter={mouseEnter}\r\n            onMouseLeave={mouseLeave}\r\n            className=\"measure-button\" onClick={props.onClick}>\r\n            <div>\r\n                <img src={hover ? props.srcHover : props.src} alt={props.alt} />\r\n            </div>\r\n            <p>{props.label}</p>\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default MeasureButton;\r\n","import React from 'react';\r\nimport './index.less';\r\n\r\nconst SubTitle = (props) => {\r\n    return (\r\n        <h2 className=\"sub-title\">\r\n            {props.title}\r\n        </h2>\r\n    );\r\n}\r\n\r\nexport default SubTitle;\r\n","import React from 'react';\r\nimport './index.less';\r\n\r\nconst DefaultButton = (props) => {\r\n    const style = { ...props.style}\r\n    return (\r\n        <button\r\n            className={`default-button ${props.active ? 'active' : ''}`}\r\n            style={style}\r\n            onClick={props.onClick}\r\n            >\r\n                \r\n            {props.content}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default DefaultButton;\r\n","const Structure = {\r\n    POINT_MEASURE: () => ({\r\n        showDistances: false,\r\n        showAngles: false,\r\n        showCoordinates: true,\r\n        showArea: false,\r\n        closed: true,\r\n        maxMarkers: 1,\r\n        name: 'Point'\r\n    }),\r\n    \r\n    LINE_MEASURE: () => ({\r\n        showDistances: true,\r\n        showArea: false,\r\n        closed: false,\r\n        name: 'Distance'\r\n    }),\r\n    \r\n    POLYGON_MEASURE: () => ({\r\n        showDistances: true,\r\n        showArea: true,\r\n        closed: true,\r\n        name: 'Area'\r\n    })\r\n}\r\n\r\nexport function insertion(key) {\r\n    window.potreeViewer.measuringTool.startInsertion(Structure[key]());\r\n}","import React, { useState } from 'react';\r\nimport MeasureButton from '../../elements/measureButton/MeasureButton';\r\nimport SubTitle from '../../elements/subTitle/SubTitle';\r\nimport IconPoint from '../../../assets/icons/icon-point-default.svg';\r\nimport IconLine from '../../../assets/icons/icon-line-default.svg';\r\nimport IconPolygon from '../../../assets/icons/icon-polygon-default.svg';\r\n\r\nimport IconPointWhite from '../../../assets/icons/icon-point-white.svg';\r\nimport IconLineWhite from '../../../assets/icons/icon-line-white.svg';\r\nimport IconPolygonWhite from '../../../assets/icons/icon-polygon-white.svg';\r\n\r\nimport './index.less';\r\nimport SectionTitle from '../../elements/sectionTitle/SectionTitle';\r\nimport DefaultButton from '../../elements/defaultButton/DefaultButton';\r\nimport { insertion } from '../../../potree/insertion';\r\nimport { useEffect } from 'react';\r\n\r\nconst Tools = (props) => {\r\n    const [active, setactive] = useState('show');\r\n\r\n    useEffect(() => {\r\n        if (window.potreeViewer) {\r\n            window.potreeViewer.measuringTool.showLabels = active === 'show';\r\n        }\r\n    })\r\n\r\n    const measureItmes = [{\r\n        onClick: () => {\r\n            props.disposeScene();\r\n            insertion('POINT_MEASURE');\r\n        },\r\n        src: IconPoint,\r\n        srcHover: IconPointWhite,\r\n        alt: 'point icon',\r\n        label: 'Point'\r\n    }, {\r\n        onClick: () => {\r\n            props.disposeScene();\r\n            insertion('LINE_MEASURE')\r\n        },\r\n        src: IconLine,\r\n        srcHover: IconLineWhite,\r\n        alt: 'line icon',\r\n        label: 'Line'\r\n    },\r\n    {\r\n        onClick: () => {\r\n            props.disposeScene();\r\n            insertion('POLYGON_MEASURE')\r\n        },\r\n        src: IconPolygon,\r\n        srcHover: IconPolygonWhite,\r\n        alt: 'polygon icon',\r\n        label: 'Polygon'\r\n    }]\r\n\r\n    return (\r\n        <div>\r\n            <SubTitle title=\"Measurement\" />\r\n            <div className=\"icon-wrap\">\r\n                {measureItmes.map((item, index) => (\r\n                    <MeasureButton\r\n                        key={index}\r\n                        onClick={item.onClick}\r\n                        src={item.src}\r\n                        srcHover={item.srcHover}\r\n                        alt={item.src}\r\n                        label={item.label} />\r\n                ))}\r\n            </div>\r\n\r\n            <SectionTitle title=\"Show/Hide labels\" />\r\n            <div>\r\n                <DefaultButton onClick={() => setactive('show')} active={active === 'show'} content=\"SHOW\" />\r\n                <DefaultButton onClick={() => setactive('hide')} active={active === 'hide'} content=\"HIDE\" style={{ marginRight: 0 }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tools;\r\n","import { Tree } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport SubTitle from '../../elements/subTitle/SubTitle';\r\nimport './index.less';\r\n\r\nconst treeDataStructure = () => [\r\n    {\r\n        title: 'Pointclouds',\r\n        key: 'pointCloud',\r\n    },\r\n    {\r\n        title: 'Measurements',\r\n        key: 'measurement',\r\n    },\r\n    {\r\n        title: 'Annotations',\r\n        key: 'annotation',\r\n    },\r\n];\r\n\r\n\r\nconst UIScene = (props) => {\r\n    const [checkedKeys, setCheckedKeys] = useState([]);\r\n    // const [selectedKeys, setSelectedKeys] = useState([]);\r\n    const [treeData, setTreeData] = useState(treeDataStructure())\r\n\r\n    const onCheck = (checkedKeys) => {\r\n        const { measurements, annotations, pointclouds } =  window.potreeViewer.scene;\r\n        \r\n        measurements.map(item => item.visible = false);\r\n        pointclouds.map(item => item.visible = false);\r\n        annotations.children.map(item => item.visible = false);\r\n\r\n        checkedKeys\r\n            .filter(item => item !== 'pointCloud' && item !== 'measurement' && item !== 'annotation')\r\n            .map(uuid => {\r\n                if (measurements.find(item => item.uuid === uuid)) {\r\n                    measurements.find(item => item.uuid === uuid).visible = true;\r\n                }\r\n\r\n                if (annotations.children.find(item => item.uuid === uuid)) {\r\n                    annotations.children.find(item => item.uuid === uuid).visible = true;\r\n                }\r\n\r\n                if (pointclouds.find(item => item.uuid === uuid)) {\r\n                    pointclouds.find(item => item.uuid === uuid).visible = true;\r\n                }\r\n                return;\r\n            })\r\n\r\n        setCheckedKeys(checkedKeys);\r\n    };\r\n\r\n    // const onSelect = (selectedKeys, info) => {\r\n    //     console.log('onSelect', info);\r\n    //     setSelectedKeys(selectedKeys);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        if(window.potreeViewer) {\r\n            const { measurements, annotations, pointclouds } =  window.potreeViewer.scene;\r\n\r\n            const initChecked = []\r\n            treeData.map(item => {\r\n                let temp;\r\n                switch (item.key) {\r\n                    case 'pointCloud': temp = pointclouds.map(pointCloud => ({ key: pointCloud.uuid, title: pointCloud.name })); break;\r\n                    case 'measurement': temp = measurements.map(measure => ({ key: measure.uuid, title: measure.name })); break;\r\n                    case 'annotation': temp = annotations.children.map(annotation => ({ key: annotation.uuid, title: annotation.name })); break;\r\n                }\r\n\r\n                \r\n                temp.map(hasModel => initChecked.push(hasModel.key));\r\n                item.children = temp;\r\n            })\r\n\r\n            setCheckedKeys([...initChecked]);\r\n            setTreeData([...treeData]);\r\n        }\r\n    }, [props.update])\r\n\r\n    return (\r\n        <div className=\"scene-ui-wrap\">\r\n            <SubTitle title=\"Object\" />\r\n            <Tree\r\n                showLine={true}\r\n                checkable\r\n                // expandedKeys={expandedKeys}\r\n                onCheck={onCheck}\r\n                checkedKeys={checkedKeys}\r\n                // onSelect={onSelect}\r\n                // selectedKeys={selectedKeys}\r\n                treeData={treeData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UIScene;\r\n\r\n\r\n\r\n//   const treeData = [\r\n//     {\r\n//       title: 'Pointclouds',\r\n//       key: '0-0',\r\n//       children: [\r\n//         {\r\n//           title: '0-0-0',\r\n//           key: '0-0-0',\r\n//           children: [\r\n//             {\r\n//               title: '0-0-0-0',\r\n//               key: '0-0-0-0',\r\n//             },\r\n//             {\r\n//               title: '0-0-0-1',\r\n//               key: '0-0-0-1',\r\n//             },\r\n//             {\r\n//               title: '0-0-0-2',\r\n//               key: '0-0-0-2',\r\n//             },\r\n//           ],\r\n//         },\r\n\r\n//         {\r\n//           title: '0-0-2',\r\n//           key: '0-0-2',\r\n//         },\r\n//       ],\r\n//     },\r\n//     {\r\n//       title: 'Measurements',\r\n//       key: '0-1',\r\n//       children: [\r\n//         {\r\n//           title: '0-1-0-0',\r\n//           key: '0-1-0-0',\r\n//         },\r\n//         {\r\n//           title: '0-1-0-1',\r\n//           key: '0-1-0-1',\r\n//         },\r\n//         {\r\n//           title: '0-1-0-2',\r\n//           key: '0-1-0-2',\r\n//         },\r\n//       ],\r\n//     },\r\n//     {\r\n//       title: 'Annotations',\r\n//       key: '0-2',\r\n//     },\r\n//   ];","import React, { useState } from 'react';\r\nimport { Collapse } from 'antd';\r\n\r\nimport appearanceIcon from '../../../assets/icons/icon-appearance.svg';\r\nimport sceneIcon from '../../../assets/icons/icon-scene.svg';\r\nimport toolIcon from '../../../assets/icons/icon-tool.svg';\r\n\r\nimport Appearance from '../appearance/Appearance';\r\nimport Tools from '../tools/Tools';\r\n\r\nimport './index.less';\r\nimport UIScene from '../scene/UIScene';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst useUpdateScene = () => {\r\n    const [tempArr, settempArr] = useState(['d']);\r\n\r\n    const disposeScene = () => settempArr([...tempArr]);\r\n\r\n    return [tempArr, disposeScene];\r\n}\r\n\r\nconst DefaultCollapse = (props) => {\r\n    const [activeKey, setactiveKey] = useState(['1']);\r\n    const onChangeKeys = (key) => setactiveKey(key);\r\n\r\n    const [tempArr, disposeScene] = useUpdateScene();\r\n\r\n    const panelItems = [{\r\n        title: (<><img src={appearanceIcon} className=\"collapse__header_icon\" alt=\"appearance icon\"/> Appearance</>),\r\n        children: (<Appearance viewer={props.viewer} />)\r\n    },\r\n    {\r\n        title: (<><img src={toolIcon} className=\"collapse__header_icon\" alt=\"scene icon\"/>Tools</>),\r\n        children: (<Tools disposeScene={disposeScene} />)\r\n    },\r\n    {\r\n        title: (<><img src={sceneIcon} className=\"collapse__header_icon\" alt=\"tool icon\"/>Scene</>),\r\n        children: (<UIScene update={tempArr} />)\r\n    }]\r\n\r\n    return (\r\n        <div className=\"collapse__wrapper\">\r\n        <Collapse\r\n          defaultActiveKey={activeKey}\r\n          onChange={onChangeKeys}\r\n          expandIconPosition={'right'}\r\n        >\r\n            {panelItems.map((item, index) => (\r\n                <Panel header={item.title} style={{\r\n                    fontWeight: activeKey.find(itemKey => +itemKey === (index + 1)) ? 'bold': null\r\n                }} key={index + 1}>\r\n                {item.children}\r\n              </Panel>\r\n            ))}\r\n        </Collapse>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DefaultCollapse;\r\n","import React from 'react';\r\nimport './index.less';\r\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\n\r\nconst cssStyle = {\r\n    arrowStyle: {\r\n        fontSize: 21,\r\n        color: 'var(--selected)'\r\n    }\r\n}\r\n\r\nconst HideCollapse = (props) => {\r\n    const onClick = () => props.setvisible(!props.visible);\r\n\r\n    return (\r\n        <div className=\"hide-collapse-button\" onClick={onClick}>\r\n            {props.visible ? <DoubleLeftOutlined style={cssStyle.arrowStyle} /> : <DoubleRightOutlined style={cssStyle.arrowStyle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HideCollapse;\r\n","const Cesium = window.Cesium;\r\nconst THREE = window.THREE;\r\nconst proj4 = window.proj4;\r\nconst Potree = window.Potree;\r\nconst $ = window.$;\r\nexport function potreeInit(reactSetViewer) {\r\n\r\n    window.cesiumViewer = new Cesium.Viewer('cesiumContainer', {\r\n        useDefaultRenderLoop: false,\r\n        animation: false,\r\n        baseLayerPicker: false,\r\n        fullscreenButton: false,\r\n        geocoder: false,\r\n        homeButton: false,\r\n        infoBox: false,\r\n        sceneModePicker: false,\r\n        selectionIndicator: false,\r\n        timeline: false,\r\n        navigationHelpButton: false,\r\n        imageryProvider: Cesium.createOpenStreetMapImageryProvider({ url: 'https://a.tile.openstreetmap.org/' }),\r\n        terrainShadows: Cesium.ShadowMode.DISABLED,\r\n    });\r\n\r\n    let cp = new Cesium.Cartesian3(4303414.154026048, 552161.235598733, 4660771.704035539);\r\n\twindow.cesiumViewer.camera.setView({\r\n\t\tdestination : cp,\r\n\t\torientation: {\r\n\t\t\theading : 10, \r\n\t\t\tpitch : -Cesium.Math.PI_OVER_TWO * 0.5, \r\n\t\t\troll : 0.0 \r\n\t\t}\r\n\t});\r\n\r\n\twindow.potreeViewer = new Potree.Viewer(document.getElementById(\"potree_render_area\"), {\r\n\t\tuseDefaultRenderLoop: false\r\n\t});\r\n\twindow.potreeViewer.setEDLEnabled(true);\r\n\twindow.potreeViewer.setFOV(60);\r\n\twindow.potreeViewer.setPointBudget(4*1000*1000);\r\n\twindow.potreeViewer.setMinNodeSize(50);\r\n\twindow.potreeViewer.loadSettingsFromURL();\r\n\twindow.potreeViewer.setBackground(null);\r\n\twindow.potreeViewer.useHQ = true;\r\n\r\n\r\n\t// window.potreeViewer.setDescription(`\r\n\t// \tPotree using <a href=\"https://cesiumjs.org/\" target=\"_blank\">Cesium</a> to display an \r\n\t// \t<a href=\"https://www.openstreetmap.org\" target=\"_blank\">OpenStreetMap</a> map below.<br>\r\n\t// \tPoint cloud courtesy of <a href=\"http://riegl.com/\" target=\"_blank\">Riegl</a><br>`);\r\n\r\n\twindow.potreeViewer.loadGUI(() => {\r\n\t\twindow.potreeViewer.setLanguage('en');\r\n\t\t$(\"#menu_appearance\").next().show();\r\n\t\t$(\"#menu_tools\").next().show();\r\n\t\t$(\"#menu_scene\").next().show();\r\n\t\twindow.potreeViewer.toggleSidebar();\r\n    });\r\n    \r\n    reactSetViewer(window.potreeViewer)\r\n\t\r\n\tPotree.loadPointCloud(\"http://5.9.65.151/mschuetz/potree/resources/pointclouds/riegl/retz/cloud.js\", \"Retz\", function(e){\r\n\t\tlet scene = window.potreeViewer.scene;\r\n\t\t\r\n\t\tscene.addPointCloud(e.pointcloud);\r\n\t\t\r\n\r\n\t\te.pointcloud.position.set(569277.402752, 5400050.599046, 0);\r\n\t\te.pointcloud.rotation.set(0, 0, -0.035);\r\n\r\n\t\tlet material = e.pointcloud.material;\r\n\t\tmaterial.pointSizeType = Potree.PointSizeType.ADAPTIVE;\r\n\t\tmaterial.size = 0.7;\r\n\t\tmaterial.elevationRange = [0, 70];\r\n\t\tmaterial.weightRGB = 1.0;\r\n\t\tmaterial.weightElevation = 1.0;\r\n\t\t\r\n\t\tscene.view.position.set(570975.577, 5398630.521, 1659.311);\r\n\t\tscene.view.lookAt(570115.285, 5400866.092, 30.009);\r\n\r\n\t\tPotree.measureTimings = true;\r\n\r\n\t\t\r\n\t\t\r\n\r\n\t\t//let pointcloudProjection = e.pointcloud.projection;\r\n\t\tlet pointcloudProjection = \"+proj=utm +zone=33 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\";\r\n\t\tlet mapProjection = proj4.defs(\"WGS84\");\r\n\r\n\t\twindow.toMap = proj4(pointcloudProjection, mapProjection);\r\n\t\twindow.toScene = proj4(mapProjection, pointcloudProjection);\r\n\t\t\r\n\t\t// {\r\n\t\t// \tlet bb = window.potreeViewer.getBoundingBox();\r\n\r\n\t\t// \tlet minWGS84 = proj4(pointcloudProjection, mapProjection, bb.min.toArray());\r\n\t\t// \tlet maxWGS84 = proj4(pointcloudProjection, mapProjection, bb.max.toArray());\r\n\t\t// }\r\n\t});\r\n\r\n\tfunction loop(timestamp){\r\n\t\trequestAnimationFrame(loop);\r\n\r\n\t\twindow.potreeViewer.update(window.potreeViewer.clock.getDelta(), timestamp);\r\n\r\n\t\twindow.potreeViewer.render();\r\n\r\n\t\tif(window.toMap !== undefined){\r\n\r\n\t\t\t{\r\n\t\t\t\tlet camera = window.potreeViewer.scene.getActiveCamera();\r\n\r\n\t\t\t\tlet pPos\t\t= new THREE.Vector3(0, 0, 0).applyMatrix4(camera.matrixWorld);\r\n\t\t\t\tlet pRight  = new THREE.Vector3(600, 0, 0).applyMatrix4(camera.matrixWorld);\r\n\t\t\t\tlet pUp\t\t = new THREE.Vector3(0, 600, 0).applyMatrix4(camera.matrixWorld);\r\n\t\t\t\tlet pTarget = window.potreeViewer.scene.view.getPivot();\r\n\r\n\t\t\t\tlet toCes = (pos) => {\r\n\t\t\t\t\tlet xy = [pos.x, pos.y];\r\n\t\t\t\t\tlet height = pos.z;\r\n\t\t\t\t\tlet deg = window.toMap.forward(xy);\r\n\t\t\t\t\tlet cPos = Cesium.Cartesian3.fromDegrees(...deg, height);\r\n\r\n\t\t\t\t\treturn cPos;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet cPos = toCes(pPos);\r\n\t\t\t\tlet cUpTarget = toCes(pUp);\r\n\t\t\t\tlet cTarget = toCes(pTarget);\r\n\r\n\t\t\t\tlet cDir = Cesium.Cartesian3.subtract(cTarget, cPos, new Cesium.Cartesian3());\r\n\t\t\t\tlet cUp = Cesium.Cartesian3.subtract(cUpTarget, cPos, new Cesium.Cartesian3());\r\n\r\n\t\t\t\tcDir = Cesium.Cartesian3.normalize(cDir, new Cesium.Cartesian3());\r\n\t\t\t\tcUp = Cesium.Cartesian3.normalize(cUp, new Cesium.Cartesian3());\r\n\r\n\t\t\t\twindow.cesiumViewer.camera.setView({\r\n\t\t\t\t\tdestination : cPos,\r\n\t\t\t\t\torientation : {\r\n\t\t\t\t\t\tdirection : cDir,\r\n\t\t\t\t\t\tup : cUp\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tlet aspect = window.potreeViewer.scene.getActiveCamera().aspect;\r\n\t\t\tif(aspect < 1){\r\n\t\t\t\tlet fovy = Math.PI * (window.potreeViewer.scene.getActiveCamera().fov / 180);\r\n\t\t\t\twindow.cesiumViewer.camera.frustum.fov = fovy;\r\n\t\t\t}else{\r\n\t\t\t\tlet fovy = Math.PI * (window.potreeViewer.scene.getActiveCamera().fov / 180);\r\n\t\t\t\tlet fovx = Math.atan(Math.tan(0.5 * fovy) * aspect) * 2\r\n\t\t\t\twindow.cesiumViewer.camera.frustum.fov = fovx;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\twindow.cesiumViewer.render();\r\n\t}\r\n\r\n\trequestAnimationFrame(loop);\r\n\r\n}\r\n\r\n// {\r\n//     let aTownHall = new Potree.Annotation({\r\n//         position: [569879.768, 5400886.182, 80.691],\r\n//         title: \"Town Hall\",\r\n//         cameraPosition: [569955.329, 5400822.949, 98.807],\r\n//         cameraTarget: [569879.768, 5400886.182, 46.691]\r\n//     });\r\n//     scene.annotations.add(aTownHall);\r\n\r\n//     let aTrainStation = new Potree.Annotation({\r\n//         position: [570337.407, 5400522.730, 30],\r\n//         title: \"Train Station\",\r\n//         cameraPosition: [570377.074, 5400427.884, 100.576],\r\n//         cameraTarget: [570337.407, 5400522.730, 18.595]\r\n//     });\r\n//     scene.annotations.add(aTrainStation);\r\n\r\n//     { // Attribute Selector Annotation\r\n\r\n//         // Create title element with jquery\r\n//         let elTitle = $(`\r\n//             <span>\r\n//                 Attribute:\r\n//                 <img title=\"Elevation\" name=\"action_elevation\" src=\"${Potree.resourcePath}/icons/profile.svg\" class=\"annotation-action-icon\"/>\r\n//                 <img title=\"RGB and Elevation\" name=\"action_both\" src=\"${Potree.resourcePath}/icons/rgb_elevation.png\" class=\"annotation-action-icon\"/>\r\n//                 <img title=\"RGB\" name=\"action_rgb\" src=\"${Potree.resourcePath}/icons/rgb.svg\" class=\"annotation-action-icon\"/>\r\n//             </span>`);\r\n//         elTitle.find(\"img[name=action_elevation]\").click( () => {\r\n//             scene.pointclouds.forEach( pc => pc.material.activeAttributeName = \"elevation\" );\r\n//         });\r\n//         elTitle.find(\"img[name=action_rgb]\").click( () => {\r\n//             scene.pointclouds.forEach( pc => pc.material.activeAttributeName = \"rgba\" );\r\n//         });\r\n//         elTitle.find(\"img[name=action_both]\").click( () => {\r\n//             scene.pointclouds.forEach( pc => pc.material.activeAttributeName = \"composite\" );\r\n//         });\r\n\r\n//         // Give the annotation a meaningful string representation for the sidebar\r\n//         elTitle.toString = () => \"Color Setting\";\r\n\r\n//         // Same as with other annotations, except title is a jquery object this time.\r\n//         let aActions = new Potree.Annotation({\r\n//             position: [569222.340, 5401213.625, 227],\r\n//             title: elTitle\r\n//         });\r\n//         scene.annotations.add(aActions);\r\n//     }\r\n\r\n//     { // Attribute Selector Annotation\r\n\r\n//         let elTitle = $(`\r\n//             <span>\r\n//                 Quality:\r\n//                 <span name=\"low\"  style=\"font-family: monospace; margin-left: 4px\">low</span>\r\n//                 <span name=\"med\"  style=\"font-family: monospace; margin-left: 4px\">med</span>\r\n//                 <span name=\"high\" style=\"font-family: monospace; margin-left: 4px\">high</span>\r\n//             </span>`);\r\n        \r\n//         elTitle.find(\"span\").mouseover( (e) => {\r\n//             $(e.target).css(\"filter\", \"drop-shadow(0px 0px 1px white)\");\r\n//         }).mouseout( (e) => {\r\n//             $(e.target).css(\"filter\", \"\");\r\n//         });\r\n\r\n//         elTitle.find(\"span[name=low]\").click( () => {\r\n//             window.potreeViewer.setPointBudget(1 * 1000 * 1000);\r\n//             window.potreeViewer.useHQ = false;\r\n//         });\r\n\r\n//         elTitle.find(\"span[name=med]\").click( () => {\r\n//             window.potreeViewer.setPointBudget(3 * 1000 * 1000);\r\n//             window.potreeViewer.useHQ = false;\r\n//         });\r\n\r\n//         elTitle.find(\"span[name=high]\").click( () => {\r\n//             window.potreeViewer.setPointBudget(4 * 1000 * 1000);\r\n//             window.potreeViewer.useHQ = true;\r\n//         });\r\n\r\n//         // Give the annotation a meaningful string representation for the sidebar\r\n//         elTitle.toString = () => \"Quality Setting\";\r\n\r\n//         // Same as with other annotations, except title is a jquery object this time.\r\n//         let aActions = new Potree.Annotation({\r\n//             position: [570274.902, 5401873.626, 227],\r\n//             title: elTitle\r\n//         });\r\n//         scene.annotations.add(aActions);\r\n//     }\r\n// }","import React, { useEffect, useRef } from 'react';\r\nimport { potreeInit } from '../../../potree/init';\r\nimport './index.less';\r\n\r\nconst cssStyle = {\r\n    potreeContainer: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0\r\n    },\r\n    potreeRenderArea: {\r\n        backgroundImage: `url('/lib/potree/potree/resources/images/background.jpg')`\r\n    },\r\n    cesiumContainer: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'green'\r\n    },\r\n}\r\n\r\nconst PotreeRender = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        if(ref.current) {\r\n            potreeInit(props.setviewer)\r\n        }\r\n    }, [ref]);\r\n    \r\n    return (\r\n        <div className=\"potree_container\" style={cssStyle.potreeContainer} ref={ref}>\r\n            <div id=\"potree_render_area\" style={cssStyle.potreeRenderArea}>\r\n                <div id=\"cesiumContainer\" style={cssStyle.cesiumContainer} />\r\n            </div>\r\n            {/* <div id=\"potree_sidebar_container\" /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PotreeRender;\r\n","import React, { useState } from 'react';\r\nimport { Layout } from 'antd';\r\nimport './index.less';\r\nimport DefaultCollapse from '../components/blocks/collapse/DefaultCollapse';\r\nimport HideCollapse from '../components/elements/hideCollapse/HideCollapse';\r\nimport PotreeRender from '../components/blocks/potree/PotreeRender';\r\nconst { Sider, Content } = Layout;\r\n\r\n\r\n\r\nconst BaseLayout = () => {\r\n    const [visible, setvisible] = useState(true);\r\n    const [viewer, setviewer] = useState(null);\r\n    \r\n    return (\r\n        <Layout>\r\n            <Sider width={visible ? 300 : 0}>\r\n                <DefaultCollapse viewer={viewer} />\r\n                <HideCollapse visible={visible} setvisible={setvisible} />\r\n            </Sider>\r\n            <Content>\r\n                <PotreeRender setviewer={setviewer}/>\r\n            </Content>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default BaseLayout;\r\n","import React from 'react';\nimport './App.less';\nimport BaseLayout from './layout/Base';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BaseLayout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon-appearance.50854d8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scene.c12d77e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-tool.612199bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-point-default.ea7ec2e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-line-default.2799f76f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-polygon-default.ca799c61.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-point-white.2c316aac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-line-white.78ad6eb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-polygon-white.5faddf2f.svg\";"],"sourceRoot":""}